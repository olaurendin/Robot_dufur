<?xml version="1.0"?>
   <!-- Cette urdf defini physiquement le robot. Il est associe 
   a robot.wheels.xacro et a arm.xacro qui definissent respectivement ses roues et son bras articule -->

<robot name="monRobot" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find robot_description)/urdf/robot.wheels.xacro"/>
  <xacro:include filename="$(find robot_description)/urdf/arm.xacro"/>

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="0.01" ixy="0.0001" ixz="0.0001" iyy="0.01" iyz="0.0001" izz="0.01" />
    </inertial>
  </xacro:macro>

   <!-- Robot -->
   <link name="base_link"/> <!--permet d'utiliser Move Base -->

   <joint name="base_joint" type="fixed">
      <parent link="base_link"/>
      <child link="chassis" />
      <origin xyz="0 0 0.01" rpy="0 0 0"/>
   </joint>



   <!-- Chassis-->
   <link name="chassis">       
      <collision>
         <origin xyz="0 0 .1" rpy="0 0 0"/>
         <geometry>
            <box size="0.4 0.2 0.1"/>
         </geometry>
      </collision>
      <visual>
         <origin xyz="0 0 .1" rpy="0 0 0"/>
         <geometry>
            <box size="0.4 0.2 0.1"/>
         </geometry>
      </visual>
     <xacro:default_inertial mass="2.0"/>
   </link>



   <!-- Roue Libre-->
   <link name="caster">
      <collision>
         <geometry>
            <sphere radius="0.05"/>
         </geometry>
      </collision>
      <visual>
         <geometry>
           <sphere radius="0.05"/>
         </geometry>
      </visual>
      <xacro:default_inertial mass="0.01"/>
   </link>

   <!-- Joint Chassis-Roue Libre-->
   <joint name="caster_to_chassis" type="fixed">
      <origin xyz="-0.15 0 0.05" rpy="0 0 0"/>
      <child link="caster"/>
      <parent link="chassis"/>
   </joint>



   <!-- Roue Gauche-->
   <link name="left_wheel">
      <collision>
         <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
         <geometry>
            <cylinder radius="0.1" length="0.05"/>
         </geometry>
      </collision>
      <visual>
         <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
         <geometry>
              <cylinder radius="0.1" length="0.05"/>
         </geometry>
      </visual>
      <xacro:default_inertial mass="0.3"/>
   </link>

   <!-- Roue Droite-->
   <link name="right_wheel">
      <collision>
         <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
         <geometry>
            <cylinder radius="0.1" length="0.05"/>
         </geometry>
      </collision>
      <visual>
         <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
         <geometry>
            <cylinder radius="0.1" length="0.05"/>
         </geometry>
      </visual>
      <xacro:default_inertial mass="0.3"/>
   </link>

   <!-- Joint Chassis-Roue Gauche-->
   <joint type="continuous" name="left_wheel_hinge">
      <origin xyz="0.1 0.13 0.1" rpy="0 0 0"/>
      <child link="left_wheel"/>
      <parent link="chassis"/>
      <axis xyz="0 1 0"/>
   </joint>

   <!-- Joint Chassis-Roue Right-->
   <joint type="continuous" name="right_wheel_hinge">
      <origin xyz="0.1 -0.13 0.1" rpy="0 0 0"/>
      <child link="right_wheel"/>
      <parent link="chassis"/>
      <axis xyz="0 1 0"/>
   </joint>

   <!-- Plugin Roues -->
   <gazebo>
      <plugin name="wheels_controller" filename="libgazebo_ros_diff_drive.so">
         <commandTopic>cmd_vel</commandTopic>
         <odometryTopic>rrbot/odom_wheel</odometryTopic>
         <odometryFrame>odom</odometryFrame>
         <odometrySource>world</odometrySource>
         <publishOdomTF>true</publishOdomTF>
         <!-- ENTER BASE LINK NAME -->
         <robotBaseFrame>base_link</robotBaseFrame>
         <publishWheelTF>false</publishWheelTF>
         <publishTf>true</publishTf>
         <publishWheelJointState>true</publishWheelJointState>
         <legacyMode>false</legacyMode>
         <updateRate>30</updateRate>
         <!-- ENTER LEFT JOINT NAME -->
         <leftJoint>left_wheel_hinge</leftJoint>
         <!-- ENTER RIGHT JOINT NAME -->
         <rightJoint>right_wheel_hinge</rightJoint>
         <wheelSeparation>0.31</wheelSeparation>
         <wheelDiameter>0.1</wheelDiameter>
         <wheelAcceleration>0.1</wheelAcceleration>
         <wheelTorque>10</wheelTorque>
         <rosDebugLevel>na</rosDebugLevel>
      </plugin>
   </gazebo>



  <!-- Arm Joint -->
  <joint name="chassis_arm_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="${arm_position} 0 0.2"/>
    <parent link="chassis"/>
    <child link="arm_1_link"/>
  </joint>



   <!-- Joint Chassis-Support Hokuyo-->
   <joint name="support_hokuyo_joint" type="fixed">
      <axis xyz="0 1 -0.04" />
      <origin xyz="0 0 0.20" rpy="0 0 0"/>
      <parent link="chassis"/>
      <child link="hokuyo_support"/>
   </joint>

   <!-- Hokuyo Support -->
   <link name="hokuyo_support">
      <collision>
         <origin xyz="0 0 -0.03" rpy="0 0 0"/>
         <geometry>
    	    <cylinder radius="0.05" length="0.05"/>
         </geometry>
      </collision>
      <visual>
         <origin xyz="0 0 -0.03" rpy="0 0 0"/>
         <geometry>
            <cylinder radius="0.05" length="0.05"/>
         </geometry>
      </visual>
      <inertial>
         <mass value="1e-5" />
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
   </link>



   <!-- Joint Chassis-Hokuyo-->
   <joint name="hokuyo_joint" type="fixed">
      <axis xyz="0 1 0" />
      <origin xyz="0 0 0.041" rpy="0 0 0"/>
      <parent link="hokuyo_support"/>
      <child link="hokuyo_link"/>
   </joint>

   <!-- Hokuyo Laser -->
   <link name="hokuyo_link">
      <collision>
         <origin xyz="0 0 -0.03" rpy="0 0 0"/>
         <geometry>
    	    <cylinder radius="0.05" length="0.033"/>
         </geometry>
      </collision>
      <visual>
         <origin xyz="0 0 -0.03" rpy="0 0 0"/>
         <geometry>
            <cylinder radius="0.05" length="0.035"/>
         </geometry>
      </visual>
      <inertial>
         <mass value="1e-5" />
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
   </link>

   <!-- Plugin Hokuyo -->
   <gazebo reference="hokuyo_link">
      <sensor type="ray" name="head_hokuyo_sensor">
         <pose>0 0 0.5 0 0 0</pose>
         <visualize>false</visualize>
         <update_rate>2</update_rate>
         <ray>
            <scan>
               <horizontal>
                  <samples>50</samples>
                  <resolution>1</resolution>
                  <min_angle>-3.1415</min_angle>
                  <max_angle>3.1415</max_angle>
               </horizontal>
            </scan>
            <range>
               <min>0.10</min>
               <max>30.0</max>
               <resolution>0.01</resolution>
            </range>
            <noise>
               <type>gaussian</type>
               <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
               <mean>0.0</mean>
               <stddev>0.01</stddev>
            </noise>
         </ray>
         <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
            <topicName>/scan</topicName>
            <frameName>hokuyo_link</frameName>
         </plugin>
      </sensor>
   </gazebo>




   <!-- joint Chassis-Camera -->
   <joint name="camera_joint" type="fixed">
      <origin xyz="0.22 0 0.09" rpy="0 0.3 0"/>
      <parent link="chassis"/>
      <child link="camera_link"/>
   </joint>

   <!-- Chassis-Camera -->
   <link name="camera_link">
      <collision>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <geometry>
            <box size="0.04 0.04 0.04"/>
         </geometry>
      </collision>
      <visual>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <geometry>
            <box size="0.04 0.04 0.04"/>
         </geometry>
         <material name="red"/>
      </visual>
      <inertial>
         <mass value="1e-5" />
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
   </link>
   <xacro:property name="camera_link" value="0.4" /> <!--size of 'camera' box-->

   <!-- Plugin Chassis-Camera -->
   <gazebo reference="camera_link">
      <sensor type="camera" name="camera1">
         <update_rate>30.0</update_rate>
         <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
               <width>800</width>
               <height>800</height>
               <format>R8G8B8</format>
            </image>
            <clip>
               <near>0.02</near>
               <far>300</far>
            </clip>
            <noise>
               <type>gaussian</type>
               <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
               <mean>0.0</mean>
               <stddev>0.007</stddev>
            </noise>
         </camera>
         <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>rrbot/camera1</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
         </plugin>
      </sensor>
   </gazebo>


<!-- joint Bras-Camera -->
   <joint name="cameraBras_joint" type="fixed">
      <origin xyz="0 0 ${length_4}" rpy="0 -1.7 0"/>
      <parent link="laser"/>
      <child link="cameraBras_link"/>
   </joint>

   <!-- Camera -->
   <link name="cameraBras_link">
      <collision>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <geometry>
            <box size="0.04 0.04 0.04"/>
         </geometry>
      </collision>
      <visual>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <geometry>
            <box size="0.04 0.04 0.04"/>
         </geometry>
         <material name="red"/>
      </visual>
      <inertial>
         <mass value="1e-5" />
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
   </link>
   <xacro:property name="cameraBras_link" value="0.1" /> <!-- Size of square 'camera' box -->

   <!-- Plugin Camera -->
   <gazebo reference="cameraBras_link">
      <sensor type="camera" name="cameraBras">
         <update_rate>30.0</update_rate>
         <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
               <width>800</width>
               <height>800</height>
               <format>R8G8B8</format>
            </image>
            <clip>
               <near>0.02</near>
               <far>300</far>
            </clip>
            <noise>
               <type>gaussian</type>
               <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
               <mean>0.0</mean>
               <stddev>0.007</stddev>
            </noise>
         </camera>
         <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>rrbot/cameraBras</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
         </plugin>
      </sensor>
   </gazebo>




   <!-- Joint Chassis-GPS-->
   <joint name="gps_joint" type="fixed">
      <axis xyz="0 0 0" />
      <origin xyz="-0.15 0 0.17" rpy="0 0 0"/>
      <parent link="chassis"/>
      <child link="gps_link"/>
   </joint>

   <!-- GPS -->
   <link name="gps_link">
      <collision>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <geometry>
    	    <cylinder radius="0.03" length="0.03"/>
         </geometry>
      </collision>
      <visual>
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <geometry>
            <cylinder radius="0.03" length="0.03"/>
         </geometry>
      </visual>
      <inertial>
         <mass value="1e-5" />
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
   </link>

   <!-- Plugin GPS -->
   <gazebo>
      <plugin name="novatel_gps_sim" filename="libhector_gazebo_ros_gps.so">
         <alwaysOn>true</alwaysOn>
         <updateRate>19.9</updateRate>
         <bodyName>base_link</bodyName>
         <robotNamespace>rrbot/gps</robotNamespace>
         <topicName>fix</topicName>
         <veloctyTopicName>fix_velocity</veloctyTopicName>
         <drift>5.0 5.0 5.0</drift>
         <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
	 <velocityDrift>0 0 0</velocityDrift>
         <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
      </plugin>
   </gazebo>



   <!-- Joint Chassis-Sonar-->
   <!--<joint name="sonar_joint" type="fixed">
      <axis xyz="0 0 0" />
      <origin xyz="0.2 0.05 0.09" rpy="0 0 0"/>
      <parent link="chassis"/>
      <child link="sonar_link"/>
   </joint>-->

   <!-- Sonar -->
   <!--<link name="sonar_link">
      <collision>
         <origin xyz="0 0 0" rpy="1.5707 1.5707 1.5707"/>
         <geometry>
    	    <cylinder radius="0.02" length="0.015"/>
         </geometry>
      </collision>
      <visual>
         <origin xyz="0 0 0" rpy="1.5707 1.5707 1.5707"/>
         <geometry>
            <cylinder radius="0.02" length="0.015"/>
         </geometry>
      </visual>
      <inertial>
         <mass value="1e-5" />
         <origin xyz="0 0 0" rpy="0 0 0"/>
         <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
   </link>-->
   
   

</robot>

